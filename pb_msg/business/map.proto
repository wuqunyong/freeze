syntax = "proto3";
//import "db.proto";

package pb.map;


enum E_Map_CMD  //_MSG_USER_MAP_CMD = 701 地图服务器操作
{
	SynTroop = 0; //同步部队信息 已弃用
	Scout = 1;//侦查	pb::map::Req_Scout
	Attack_Occupy = 2; //攻占(Troop_Map_OP)
	March    = 3; //行军(Troop_Map_OP)
	Transfer = 4; //调动
	Garrison = 5; //驻守
	WipeOut = 6; //扫荡
	Reclamation = 7; //屯田
	Attack_City = 8; //攻城
	Suppress    = 9 ;//镇压
	CreateBuilding = 10; //筑城
	Crusade = 11; //讨伐
	BuildingLvUp = 12; //升级
	CallRedif = 13; //征兵
	Rescue = 14; //解救 
	Annihilate = 15; // 剿灭 剿匪
	Besiege = 16;    // 围攻
	QueryRoute = 20; //查询部队行军路线(Troop_Path_Query)
	ReqViewPos = 21; //设置视野位置(Troop_Map_OP)
	MapObjList = 22; //地图物件列表(S->C)(Map_Objs)
	SynNewBuilding = 23; //MS->GS(Building)
	SynBuilding = 24; //GS->MS
	DiscardField = 25; //放弃地块((Troop_Map_OP)
	ChooseNation = 26; //选择国家 (Troop_Map_OP.idx_troop=nationid)
	AbortMarch   =27; //终止行军(Troop_Map_OP.idx_troop = idxtroop)
	BackCity     = 28; //停止部队回城(Troop_Map_OP)
	SpecialDefense = 29;//列阵(Troop_Map_OP)


	CollectField = 100;//坐标收藏
	CancelCollectField = 101;//取消坐标收藏
	MoveCity = 102; //迁城
	CloseCity = 103; //闭城
	CancelCloseCity = 104; //取消闭城	
	BackCityQuick = 105;  //快速回城(Troop_Map_OP)
	EmergencyEvacuation = 106; //紧急撤离
	CMD_MIGRATE = 107; //迁徙 messag Migrate
	Retracement   = 108; //TC 回撤
	CancelDiscardField = 109; //TS TC 取消放弃地块((Troop_Map_OP)
	PrivateMapObjList = 110; //玩家私有的地图物件
	RepScout = 111;//无需侦查坐标列表 pb::map::Rep_Scout
	RepDeleteScout = 112;//删除列表 pb::map::Rep_DeleteScout
	RepClearScout = 113;//清除所有 pb::map::Rep_ClearScout
	ReqMapInfo = 114;//地图信息请求
	RespMapBuildingInfo = 115;//地图建筑信息应答
	RespMapCampaign = 116;//地图战役信息应答
	QueryObstacleRoute = 117; //查询部队阻挡点路线(Troop_Path_Query)
	CountryInfo = 118;
	ChooseCountry = 119;
	RespCampaignScale = 120;//战役规模 CampaignScale
	RespNpcBuildingOccupy = 121;//城池占领信息 pb::map::Map_Objs
	ReqSearchMapObj = 122;		// 搜索地图对象
	CmdEnterMap = 123;			//进入地图 空协议
	RepTimerLst = 124; //定时器列表
	ReqChgMap = 125; //切换地图请求
	RespDelPrivateMapObjList = 126; //删除玩家私有的地图物件
	RespDelMap_RecoverField = 127; //Map_RecoverField
	ReqMapChkView = 128; //客户请求确认无视野物件是否可见 
	SynMapUserInfo = 129;//同步玩家基础信息
	
	RobotMarch = 180;//机器人行走
	RobotQueryRoute = 181;//机器人查询部队行军路线
	RobotOccupy = 182; //机器人占地操作(Troop_Map_OP)
	RobotAtkCity = 183; //机器人攻城(Troop_Map_OP)
	RobotBackCity = 184; //机器人回城(Troop_Map_OP)
	RobotAbortMarch = 185; //机器人停止行军(Troop_Map_OP)
	RobotGarrison = 186; //机器人驻守(Troop_Map_OP)
	RobotAIModel = 187; //机器人AI指令

	RespMapOperate = 199;//为 Map协议定义一个应答协议原来的错误码协议暂不用
}

//npc指令AI
enum E_AIBehavior_Type
{
	E_AIBehavior_None = 0;
	E_AIBehavior_Line = 1; //直线		--起点坐标，警戒格数，终点坐标
	E_AIBehavior_Round = 2; //圆形		--起点坐标，警戒格数，圆心坐标，顺时针/逆时针
	E_AIBehavior_Sector = 3; //扇形		--起点坐标，警戒格数，终点坐标，圆心坐标，顺时针/逆时针
	E_AIBehavior_Propel = 4; //推进		--起点坐标，警戒格数，终点坐标
	E_AIBehavior_Situ = 5; //原地警戒	--起点坐标，警戒格数
}

message Base_Operate
{
	E_Map_CMD cmd = 1;
	uint32 error_code = 2;
}

message HEX
{
	int32 q = 1;
	int32 r = 2;
}

message Resp_MapOperate
{
	int64 troop_id = 1;
	E_Map_CMD op = 2;
}

message Building
{
	uint32 idx = 1;
	uint32 type = 2;
	uint32 level=3;
	HEX	   pos = 4;
}

message Troop_Map_OP
{
	uint32 error_code = 1;
	HEX end_pos = 2;
	uint32 idx_troop = 3;		//待操作的部队
	uint32 count = 4;			//次数
	uint32 is_autoreturn = 5; 	//是否自动回城 1：自动回城 0:不自动
	uint32 target_type = 6;		//目标类型
}

message Robot_AI_Model{ //机器人AI模式
	uint32 error_code = 1;
	uint32 idx_troop = 2;		//待操作的部队
	E_AIBehavior_Type ai_type = 3; //AI模式
	HEX center_pos = 4; //圆心坐标
	HEX start_pos = 5; //起点坐标
	HEX end_pos = 6; //终点坐标
	int32 alter_radius = 7; //警戒格数
	bool is_clockwise = 8; //是否为顺时针
}

message Troop_Path_Query
{
	uint32 error_code = 1;
	HEX end_pos = 2;
	uint32 idx_troop = 3;	//待操作的部队
	E_Map_CMD sub_cmd = 4;  //路线查询的原因，如行军还是占领等
}

message Obstacle_Path
{
	int32 troop_id  = 1;
	HEX    obstacle_pt = 2;
	repeated HEX vec_startobs = 3; //起始点到阻挡点路线
	repeated HEX vec_endobs = 4; //阻挡点到终点路线
}

message March_Path
{	
	int32 troop_id  = 1;
	uint32 hero_id = 2;
	uint32 soldier_id = 3;
	string name = 4;  
	uint32 idx_troop=5;
	uint32 speed = 6;//经过一格需要的时间(秒)
	repeated HEX vec_path = 7; //路线
	int64  end_time = 8;   //行军结束时间
}

message Ranking
{
	string user_name = 1;
	uint32 value = 2;
}

message Map_Building
{
	int64 owner_id =1;
	uint32 skin_id = 2; //皮肤ID
	HEX pos = 3;
	uint32 type = 4;
	int32 id  = 5;
	uint32 life = 6;//耐久
	uint32 life_max = 7;//耐久上限
	uint32 troop_num = 8;
	int64 reset_time = 9;
	int64 avoid_battle_time = 10;
	int64 close_city_time = 11;
	repeated Ranking first_kill_top_three = 12;
	repeated Ranking first_siege_top_three = 13;
	uint32 guildid = 14; //部队所属同盟id
	uint32 level = 15; //建筑等级
	string name = 16 ; //建筑名称, NPC城池表示:首次占领同盟名称
	uint32 buildingeye = 17; //建筑视野
	uint32 protect_flag = 18; //1-新手保护 0-没新手保护	
}


message Map_Troop
{
	int32 troop_id  = 1;
	int64  owner_id =2;
	uint32 soldier_id = 3;
	HEX    pos = 4;
	uint32 status = 5;   //状态
	uint32 idx_curpath = 6;//行军路径中当前目标节点
	uint32 time = 7; //秒，从当前格子走过了多少时间
	uint32 speed = 8; //经过一格需要的时间(秒)
	repeated HEX vec_path = 9; //路线	
	int64  end_time = 10;   //行军结束时间
	uint32 morale = 11; //士气	
	uint32 protect_flag = 12; //1-新手保护 0-没新手保护
	int32 dst_troop_id = 13; //PVP交战队伍ID	
}

message Map_Field
{
	int64  owner_id =1;	
	HEX    pos = 2;
	int32 field_id = 3;
	uint32 type = 4;	
	uint32 Status = 5; //状态
	uint32 FinishTime = 6; //状态结束时间
	uint32 protect_flag = 7; //1-新手保护 0-没新手保护
}

message Map_RecoverField
{
	HEX 	pos = 1;
	int64   atk_user_id = 2;	
	int64   end_time = 3; //守军恢复结束时间
}

message Map_WildNpcTroop
{
	uint32 	id = 1;
	HEX 	pos = 2;
	int32   wild_npc_id = 3;	//野怪 ID
	int64  disappear_time=4; 	// 野怪消失时间
	int32  status = 5;			// 野怪状态
}

message Map_WildBuilding
{
	uint32 id  = 1;
	HEX    pos = 2;
	uint32 type = 3;		// 位置
	uint32 level = 4;
	uint32 troop_num = 5;	// 剩余守军数量
	uint32 life = 6;		//耐久
	uint32 life_max = 7;	//耐久上限
	int32  disappear_time=8; // 野怪要塞消失时间
}

message MapUserData
{
	int64 user_id = 1;
	string user_name = 2;
	int32  guild_id = 3;
	int32  capture_id =4;
	int32  guild_job = 5;
	int32  civilization_type = 6;
}


message Map_Objs
{
	repeated Map_Building vec_buildings = 1;
	repeated Map_Troop vec_troops = 2;
	repeated Map_Field vec_fields = 3;
	repeated Map_RecoverField vec_recoverfield = 4;
	repeated Map_WildNpcTroop vec_wild_npc_troop = 5;
	repeated Map_WildBuilding vec_wild_building = 6;
	repeated MapUserData vec_users = 7;
}

message PrivateNpc_Troop
{
	uint32 id = 1;
	uint32 id_template = 2;
	HEX 	pos = 3;
}

message Private_Map_Objs
{
	repeated PrivateNpc_Troop vec_troop = 1;
	repeated Map_WildNpcTroop vec_wild_npc_troop = 2;
}

message Collect_Map_OP
{
	uint32		errCode = 1;
	HEX		end_pos = 2;
	string		name = 3; //收藏名称	
	int64		idx =  4; //取消收藏ID  DBID
}

message Move_City
{
	uint32 error_code = 1;
	uint32 idx = 2;					//建筑索引
	HEX move_pos = 3;				//迁移位置
}

message Resurgence
{
	uint32 error_code = 1;
	HEX pos = 2;
}

message Migrate
{
	uint32 error_code = 1;
	int32 country_id = 2;			//州Id
	HEX pos = 3;					//迁徙后坐标
}

message Req_Scout
{
	uint32 error_code = 1;
	HEX pos = 2;
}

// 试打（点击侦查按钮 视作0兵试打）守军快照
message TroopScout
{
	int32 seq_no = 1;	// 地块部队序号
	int32 troop_id = 2;
	int32 force1 = 3;
	int32 force2 = 4;
	int32 force3 = 5;
}

message FieldScout
{
	HEX pos = 1;
	repeated TroopScout scout_info = 2;
	int64 scout_time = 3;					// 地块被侦查时间
	int64 scout_end_time = 4;				// 战平地块恢复结束时间
}

// 地块试打快照数据 
message Rep_Scout
{
	repeated FieldScout field_scout = 1;
	uint64   next_scout_time = 2;	//下次可侦查时间戳
}

message Rep_DeleteScout
{
	repeated uint32 vec_pos = 1;
}

message Rep_ClearScout
{
	E_Map_CMD	cmd  =1;
}

enum E_MapCampaignScale
{
	E_MapCampaignScale_Small = 0;
	E_MapCampaignScale_Medium = 1;
	E_MapCampaignScale_Big = 2;
}

message CombatantUser
{
	int64 user_id = 1;
	string user_name = 2;
	int32 honor = 3;
	int32 occupy = 4;
}

message MapCampaign
{
	HEX pos = 1;
	int32 building_id = 2;
	int32 count = 3;
	E_MapCampaignScale scale = 4;
	repeated int32 combatant_guilds = 5;
	int64 start_time = 6;
	int64 end_time = 7;
	CombatantUser honor_top = 8;
	CombatantUser occupy_top = 9;
	CombatantUser self = 10;
}

message MapCampaignResp
{
	repeated MapCampaign campaigns = 1;
}

message Country
{
	int32 country_id = 1;
	int32 num = 2;
	int32 open = 3;			//0:表示未开启, 非0:表示开启
}

message Country_Info
{
	repeated Country countries = 1;
}

message Choose_Country
{
	uint32 error_code = 1;
	int32 country_id = 2;
}

message CampaignScale		//enum RespCampaignScale
{
	HEX pos = 1;			//坐标
	int32 scale = 2;		//规模
	bool finish = 3;		//结束标记,非0表示结束
}

message Req_SearchMapObj
{
	int32 q = 1;				// 搜索中心点 q 坐标
	int32 r = 2;				// 搜索中心点 r 坐标
	int32 exhale = 3;			// 距离
	int32 obj_kind = 4;			// 1:建筑, 2:资源地, 3: 精英野怪搜索
	int32 obj_type = 5;			// 建筑(1:主城; 2:分城; 3:NPC城; 4:分城; 5:关隘; 6:分城; ... ) ; 资源地(0: 全资源 1:空地; 2:木材;... )
	int32 obj_level_min = 6;	// 等级 (地块，建筑或者精英野怪 的 最低等级)
	int32 obj_level_max = 7;	// 等级 (地块，建筑或者精英野怪 的 最高等级)
	int32 obj_belong = 8;		// 归属 1: 自己; 2: 无归属; 3: 同盟; 4: 友盟 ; 5: 敌方
}

message Rep_SearchMapObj
{
	uint32 error_code = 1;
	int32 result = 2;		// 搜索结果 0: 搜索失败; 1: 搜索成功
	repeated HEX lst_hex = 3;	// 搜索结果地块列表, 满足条件的最优解所有地块坐标列表
}


message TimerTask
{
	int64 id = 1; // dbid
	int64 user_id = 2; // 玩家id
	uint32 type = 3; // // 类型  EnumDefine::E_TimeTask
	int64 end_time = 4; // 结束时间
	int64 id_link = 5; // 业务关键值ID
	int64 param = 6; // 参数
	bytes pb_param = 7; //字符串参数
}

message Rep_Timer_list
{
   repeated TimerTask lst = 1; //时间队列信息
}

message Req_ChgMap
{
	uint32 error_code = 1;
	uint32 mapType = 2; //地图类型
}

message Req_Map_Chk_View
{
	repeated int64 vec_chk_troop_lst = 1;
	repeated int64 vec_chk_buildings_lst = 2;
}


