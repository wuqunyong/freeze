// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: talent.proto

#include "talent.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_talent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TalentElem_talent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_talent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TalentPanel_talent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_talent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TalentSlot_talent_2eproto;
namespace pb {
namespace talent {
class TalentSlotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TalentSlot> _instance;
} _TalentSlot_default_instance_;
class TalentElemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TalentElem> _instance;
} _TalentElem_default_instance_;
class TalentPanelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TalentPanel> _instance;
} _TalentPanel_default_instance_;
class Talent_Login_NoticeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Login_Notice> _instance;
} _Talent_Login_Notice_default_instance_;
class Talent_BaseChange_NoticeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_BaseChange_Notice> _instance;
} _Talent_BaseChange_Notice_default_instance_;
class Talent_ElemsChange_NoticeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_ElemsChange_Notice> _instance;
} _Talent_ElemsChange_Notice_default_instance_;
class Talent_Open_ReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Open_Req> _instance;
} _Talent_Open_Req_default_instance_;
class Talent_Open_ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Open_Response> _instance;
} _Talent_Open_Response_default_instance_;
class Talent_Choose_ReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Choose_Req> _instance;
} _Talent_Choose_Req_default_instance_;
class Talent_Choose_ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Choose_Response> _instance;
} _Talent_Choose_Response_default_instance_;
class Talent_Activate_ReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Activate_Req> _instance;
} _Talent_Activate_Req_default_instance_;
class Talent_Activate_ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Activate_Response> _instance;
} _Talent_Activate_Response_default_instance_;
class Talent_Unload_ReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Unload_Req> _instance;
} _Talent_Unload_Req_default_instance_;
class Talent_Unload_ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Talent_Unload_Response> _instance;
} _Talent_Unload_Response_default_instance_;
}  // namespace talent
}  // namespace pb
static void InitDefaultsscc_info_TalentElem_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_TalentElem_default_instance_;
    new (ptr) ::pb::talent::TalentElem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::TalentElem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TalentElem_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TalentElem_talent_2eproto}, {}};

static void InitDefaultsscc_info_TalentPanel_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_TalentPanel_default_instance_;
    new (ptr) ::pb::talent::TalentPanel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::TalentPanel::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TalentPanel_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TalentPanel_talent_2eproto}, {
      &scc_info_TalentSlot_talent_2eproto.base,
      &scc_info_TalentElem_talent_2eproto.base,}};

static void InitDefaultsscc_info_TalentSlot_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_TalentSlot_default_instance_;
    new (ptr) ::pb::talent::TalentSlot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::TalentSlot::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TalentSlot_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TalentSlot_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Activate_Req_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Activate_Req_default_instance_;
    new (ptr) ::pb::talent::Talent_Activate_Req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Activate_Req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Activate_Req_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Activate_Req_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Activate_Response_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Activate_Response_default_instance_;
    new (ptr) ::pb::talent::Talent_Activate_Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Activate_Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Activate_Response_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Activate_Response_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_BaseChange_Notice_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_BaseChange_Notice_default_instance_;
    new (ptr) ::pb::talent::Talent_BaseChange_Notice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_BaseChange_Notice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_BaseChange_Notice_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_BaseChange_Notice_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Choose_Req_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Choose_Req_default_instance_;
    new (ptr) ::pb::talent::Talent_Choose_Req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Choose_Req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Choose_Req_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Choose_Req_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Choose_Response_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Choose_Response_default_instance_;
    new (ptr) ::pb::talent::Talent_Choose_Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Choose_Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Choose_Response_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Choose_Response_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_ElemsChange_Notice_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_ElemsChange_Notice_default_instance_;
    new (ptr) ::pb::talent::Talent_ElemsChange_Notice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_ElemsChange_Notice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Talent_ElemsChange_Notice_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Talent_ElemsChange_Notice_talent_2eproto}, {
      &scc_info_TalentSlot_talent_2eproto.base,
      &scc_info_TalentElem_talent_2eproto.base,}};

static void InitDefaultsscc_info_Talent_Login_Notice_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Login_Notice_default_instance_;
    new (ptr) ::pb::talent::Talent_Login_Notice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Login_Notice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Talent_Login_Notice_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Talent_Login_Notice_talent_2eproto}, {
      &scc_info_TalentPanel_talent_2eproto.base,}};

static void InitDefaultsscc_info_Talent_Open_Req_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Open_Req_default_instance_;
    new (ptr) ::pb::talent::Talent_Open_Req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Open_Req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Open_Req_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Open_Req_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Open_Response_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Open_Response_default_instance_;
    new (ptr) ::pb::talent::Talent_Open_Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Open_Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Open_Response_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Open_Response_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Unload_Req_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Unload_Req_default_instance_;
    new (ptr) ::pb::talent::Talent_Unload_Req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Unload_Req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Unload_Req_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Unload_Req_talent_2eproto}, {}};

static void InitDefaultsscc_info_Talent_Unload_Response_talent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::talent::_Talent_Unload_Response_default_instance_;
    new (ptr) ::pb::talent::Talent_Unload_Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::talent::Talent_Unload_Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Talent_Unload_Response_talent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Talent_Unload_Response_talent_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_talent_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_talent_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_talent_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_talent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentSlot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentSlot, id_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentSlot, unlock_flag_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentSlot, talent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentElem, id_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentElem, level_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentElem, exp_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentElem, status_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentElem, begin_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, level_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, exp_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, point_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, slots_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, elems_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, has_pending_open_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, reserve_num_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::TalentPanel, optional_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Login_Notice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Login_Notice, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_BaseChange_Notice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_BaseChange_Notice, level_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_BaseChange_Notice, exp_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_BaseChange_Notice, point_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_ElemsChange_Notice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_ElemsChange_Notice, slots_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_ElemsChange_Notice, elems_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Open_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Open_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Open_Response, error_code_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Open_Response, reserve_num_),
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Open_Response, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Choose_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Choose_Req, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Choose_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Choose_Response, error_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Activate_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Activate_Req, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Activate_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Activate_Response, error_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Unload_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Unload_Req, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Unload_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::talent::Talent_Unload_Response, error_code_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::talent::TalentSlot)},
  { 8, -1, sizeof(::pb::talent::TalentElem)},
  { 18, -1, sizeof(::pb::talent::TalentPanel)},
  { 31, -1, sizeof(::pb::talent::Talent_Login_Notice)},
  { 37, -1, sizeof(::pb::talent::Talent_BaseChange_Notice)},
  { 45, -1, sizeof(::pb::talent::Talent_ElemsChange_Notice)},
  { 52, -1, sizeof(::pb::talent::Talent_Open_Req)},
  { 57, -1, sizeof(::pb::talent::Talent_Open_Response)},
  { 65, -1, sizeof(::pb::talent::Talent_Choose_Req)},
  { 71, -1, sizeof(::pb::talent::Talent_Choose_Response)},
  { 77, -1, sizeof(::pb::talent::Talent_Activate_Req)},
  { 83, -1, sizeof(::pb::talent::Talent_Activate_Response)},
  { 89, -1, sizeof(::pb::talent::Talent_Unload_Req)},
  { 95, -1, sizeof(::pb::talent::Talent_Unload_Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_TalentSlot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_TalentElem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_TalentPanel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Login_Notice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_BaseChange_Notice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_ElemsChange_Notice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Open_Req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Open_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Choose_Req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Choose_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Activate_Req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Activate_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Unload_Req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::talent::_Talent_Unload_Response_default_instance_),
};

const char descriptor_table_protodef_talent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014talent.proto\022\tpb.talent\"@\n\nTalentSlot\022"
  "\n\n\002id\030\001 \001(\r\022\023\n\013unlock_flag\030\002 \001(\010\022\021\n\ttale"
  "nt_id\030\004 \001(\004\"t\n\nTalentElem\022\n\n\002id\030\001 \001(\004\022\r\n"
  "\005level\030\002 \001(\r\022\013\n\003exp\030\003 \001(\r\022*\n\006status\030\004 \001("
  "\0162\032.pb.talent.E_Talent_Status\022\022\n\nbegin_t"
  "ime\030\005 \001(\004\"\312\001\n\013TalentPanel\022\r\n\005level\030\001 \001(\r"
  "\022\013\n\003exp\030\002 \001(\r\022\r\n\005point\030\003 \001(\r\022$\n\005slots\030\004 "
  "\003(\0132\025.pb.talent.TalentSlot\022$\n\005elems\030\005 \003("
  "\0132\025.pb.talent.TalentElem\022\030\n\020has_pending_"
  "open\030\006 \001(\010\022\023\n\013reserve_num\030\007 \001(\r\022\025\n\roptio"
  "nal_list\030\010 \003(\004\";\n\023Talent_Login_Notice\022$\n"
  "\004data\030\001 \001(\0132\026.pb.talent.TalentPanel\"E\n\030T"
  "alent_BaseChange_Notice\022\r\n\005level\030\001 \001(\r\022\013"
  "\n\003exp\030\002 \001(\r\022\r\n\005point\030\003 \001(\r\"g\n\031Talent_Ele"
  "msChange_Notice\022$\n\005slots\030\001 \003(\0132\025.pb.tale"
  "nt.TalentSlot\022$\n\005elems\030\002 \003(\0132\025.pb.talent"
  ".TalentElem\"\021\n\017Talent_Open_Req\"M\n\024Talent"
  "_Open_Response\022\022\n\nerror_code\030\001 \001(\r\022\023\n\013re"
  "serve_num\030\002 \001(\r\022\014\n\004data\030\003 \003(\004\"\037\n\021Talent_"
  "Choose_Req\022\n\n\002id\030\001 \003(\r\",\n\026Talent_Choose_"
  "Response\022\022\n\nerror_code\030\001 \001(\r\"!\n\023Talent_A"
  "ctivate_Req\022\n\n\002id\030\001 \001(\004\".\n\030Talent_Activa"
  "te_Response\022\022\n\nerror_code\030\001 \001(\r\"\037\n\021Talen"
  "t_Unload_Req\022\n\n\002id\030\001 \001(\004\",\n\026Talent_Unloa"
  "d_Response\022\022\n\nerror_code\030\001 \001(\r*\211\003\n\014E_Tal"
  "ent_Cmd\022\025\n\021E_Talent_Cmd_None\020\000\022\035\n\031E_Tale"
  "nt_Cmd_Login_Notice\020\001\022\"\n\036E_Talent_Cmd_Ba"
  "seChange_Notice\020\002\022#\n\037E_Talent_Cmd_ElemsC"
  "hange_Notice\020\003\022\031\n\025E_Talent_Cmd_Open_Req\020"
  "\n\022\036\n\032E_Talent_Cmd_Open_Response\020\013\022\033\n\027E_T"
  "alent_Cmd_Choose_Req\020\014\022 \n\034E_Talent_Cmd_C"
  "hoose_Response\020\r\022\035\n\031E_Talent_Cmd_Activat"
  "e_Req\020\016\022\"\n\036E_Talent_Cmd_Activate_Respons"
  "e\020\017\022\033\n\027E_Talent_Cmd_Unload_Req\020\020\022 \n\034E_Ta"
  "lent_Cmd_Unload_Response\020\021*B\n\017E_Talent_S"
  "tatus\022\r\n\tE_TE_None\020\000\022\020\n\014E_TE_Prepare\020\001\022\016"
  "\n\nE_TE_Ready\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_talent_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_talent_2eproto_sccs[14] = {
  &scc_info_TalentElem_talent_2eproto.base,
  &scc_info_TalentPanel_talent_2eproto.base,
  &scc_info_TalentSlot_talent_2eproto.base,
  &scc_info_Talent_Activate_Req_talent_2eproto.base,
  &scc_info_Talent_Activate_Response_talent_2eproto.base,
  &scc_info_Talent_BaseChange_Notice_talent_2eproto.base,
  &scc_info_Talent_Choose_Req_talent_2eproto.base,
  &scc_info_Talent_Choose_Response_talent_2eproto.base,
  &scc_info_Talent_ElemsChange_Notice_talent_2eproto.base,
  &scc_info_Talent_Login_Notice_talent_2eproto.base,
  &scc_info_Talent_Open_Req_talent_2eproto.base,
  &scc_info_Talent_Open_Response_talent_2eproto.base,
  &scc_info_Talent_Unload_Req_talent_2eproto.base,
  &scc_info_Talent_Unload_Response_talent_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_talent_2eproto_once;
static bool descriptor_table_talent_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_talent_2eproto = {
  &descriptor_table_talent_2eproto_initialized, descriptor_table_protodef_talent_2eproto, "talent.proto", 1462,
  &descriptor_table_talent_2eproto_once, descriptor_table_talent_2eproto_sccs, descriptor_table_talent_2eproto_deps, 14, 0,
  schemas, file_default_instances, TableStruct_talent_2eproto::offsets,
  file_level_metadata_talent_2eproto, 14, file_level_enum_descriptors_talent_2eproto, file_level_service_descriptors_talent_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_talent_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_talent_2eproto), true);
namespace pb {
namespace talent {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* E_Talent_Cmd_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_talent_2eproto);
  return file_level_enum_descriptors_talent_2eproto[0];
}
bool E_Talent_Cmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* E_Talent_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_talent_2eproto);
  return file_level_enum_descriptors_talent_2eproto[1];
}
bool E_Talent_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TalentSlot::InitAsDefaultInstance() {
}
class TalentSlot::_Internal {
 public:
};

TalentSlot::TalentSlot()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.TalentSlot)
}
TalentSlot::TalentSlot(const TalentSlot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&talent_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(talent_id_));
  // @@protoc_insertion_point(copy_constructor:pb.talent.TalentSlot)
}

void TalentSlot::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talent_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(talent_id_));
}

TalentSlot::~TalentSlot() {
  // @@protoc_insertion_point(destructor:pb.talent.TalentSlot)
  SharedDtor();
}

void TalentSlot::SharedDtor() {
}

void TalentSlot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TalentSlot& TalentSlot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TalentSlot_talent_2eproto.base);
  return *internal_default_instance();
}


void TalentSlot::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.TalentSlot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talent_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(talent_id_));
  _internal_metadata_.Clear();
}

const char* TalentSlot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool unlock_flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          unlock_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 talent_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          talent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TalentSlot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.TalentSlot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // bool unlock_flag = 2;
  if (this->unlock_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unlock_flag(), target);
  }

  // uint64 talent_id = 4;
  if (this->talent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_talent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.TalentSlot)
  return target;
}

size_t TalentSlot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.TalentSlot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // bool unlock_flag = 2;
  if (this->unlock_flag() != 0) {
    total_size += 1 + 1;
  }

  // uint64 talent_id = 4;
  if (this->talent_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_talent_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TalentSlot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.TalentSlot)
  GOOGLE_DCHECK_NE(&from, this);
  const TalentSlot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TalentSlot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.TalentSlot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.TalentSlot)
    MergeFrom(*source);
  }
}

void TalentSlot::MergeFrom(const TalentSlot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.TalentSlot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.unlock_flag() != 0) {
    _internal_set_unlock_flag(from._internal_unlock_flag());
  }
  if (from.talent_id() != 0) {
    _internal_set_talent_id(from._internal_talent_id());
  }
}

void TalentSlot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.TalentSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalentSlot::CopyFrom(const TalentSlot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.TalentSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalentSlot::IsInitialized() const {
  return true;
}

void TalentSlot::InternalSwap(TalentSlot* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(unlock_flag_, other->unlock_flag_);
  swap(talent_id_, other->talent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TalentSlot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TalentElem::InitAsDefaultInstance() {
}
class TalentElem::_Internal {
 public:
};

TalentElem::TalentElem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.TalentElem)
}
TalentElem::TalentElem(const TalentElem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:pb.talent.TalentElem)
}

void TalentElem::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

TalentElem::~TalentElem() {
  // @@protoc_insertion_point(destructor:pb.talent.TalentElem)
  SharedDtor();
}

void TalentElem::SharedDtor() {
}

void TalentElem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TalentElem& TalentElem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TalentElem_talent_2eproto.base);
  return *internal_default_instance();
}


void TalentElem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.TalentElem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

const char* TalentElem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 exp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.talent.E_Talent_Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::pb::talent::E_Talent_Status>(val));
        } else goto handle_unusual;
        continue;
      // uint64 begin_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          begin_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TalentElem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.TalentElem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_level(), target);
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_exp(), target);
  }

  // .pb.talent.E_Talent_Status status = 4;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  // uint64 begin_time = 5;
  if (this->begin_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_begin_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.TalentElem)
  return target;
}

size_t TalentElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.TalentElem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_level());
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_exp());
  }

  // uint64 begin_time = 5;
  if (this->begin_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_begin_time());
  }

  // .pb.talent.E_Talent_Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TalentElem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.TalentElem)
  GOOGLE_DCHECK_NE(&from, this);
  const TalentElem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TalentElem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.TalentElem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.TalentElem)
    MergeFrom(*source);
  }
}

void TalentElem::MergeFrom(const TalentElem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.TalentElem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from.begin_time() != 0) {
    _internal_set_begin_time(from._internal_begin_time());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void TalentElem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.TalentElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalentElem::CopyFrom(const TalentElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.TalentElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalentElem::IsInitialized() const {
  return true;
}

void TalentElem::InternalSwap(TalentElem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(begin_time_, other->begin_time_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TalentElem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TalentPanel::InitAsDefaultInstance() {
}
class TalentPanel::_Internal {
 public:
};

TalentPanel::TalentPanel()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.TalentPanel)
}
TalentPanel::TalentPanel(const TalentPanel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      slots_(from.slots_),
      elems_(from.elems_),
      optional_list_(from.optional_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserve_num_) -
    reinterpret_cast<char*>(&level_)) + sizeof(reserve_num_));
  // @@protoc_insertion_point(copy_constructor:pb.talent.TalentPanel)
}

void TalentPanel::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TalentPanel_talent_2eproto.base);
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserve_num_) -
      reinterpret_cast<char*>(&level_)) + sizeof(reserve_num_));
}

TalentPanel::~TalentPanel() {
  // @@protoc_insertion_point(destructor:pb.talent.TalentPanel)
  SharedDtor();
}

void TalentPanel::SharedDtor() {
}

void TalentPanel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TalentPanel& TalentPanel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TalentPanel_talent_2eproto.base);
  return *internal_default_instance();
}


void TalentPanel::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.TalentPanel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slots_.Clear();
  elems_.Clear();
  optional_list_.Clear();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserve_num_) -
      reinterpret_cast<char*>(&level_)) + sizeof(reserve_num_));
  _internal_metadata_.Clear();
}

const char* TalentPanel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 exp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 point = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          point_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.talent.TalentSlot slots = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .pb.talent.TalentElem elems = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elems(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // bool has_pending_open = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          has_pending_open_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 reserve_num = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          reserve_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 optional_list = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_optional_list(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          _internal_add_optional_list(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TalentPanel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.TalentPanel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_level(), target);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_exp(), target);
  }

  // uint32 point = 3;
  if (this->point() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_point(), target);
  }

  // repeated .pb.talent.TalentSlot slots = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slots_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_slots(i), target, stream);
  }

  // repeated .pb.talent.TalentElem elems = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_elems_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_elems(i), target, stream);
  }

  // bool has_pending_open = 6;
  if (this->has_pending_open() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_has_pending_open(), target);
  }

  // uint32 reserve_num = 7;
  if (this->reserve_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_reserve_num(), target);
  }

  // repeated uint64 optional_list = 8;
  {
    int byte_size = _optional_list_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          8, _internal_optional_list(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.TalentPanel)
  return target;
}

size_t TalentPanel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.TalentPanel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.talent.TalentSlot slots = 4;
  total_size += 1UL * this->_internal_slots_size();
  for (const auto& msg : this->slots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.talent.TalentElem elems = 5;
  total_size += 1UL * this->_internal_elems_size();
  for (const auto& msg : this->elems_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 optional_list = 8;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->optional_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _optional_list_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_level());
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_exp());
  }

  // uint32 point = 3;
  if (this->point() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_point());
  }

  // bool has_pending_open = 6;
  if (this->has_pending_open() != 0) {
    total_size += 1 + 1;
  }

  // uint32 reserve_num = 7;
  if (this->reserve_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserve_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TalentPanel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.TalentPanel)
  GOOGLE_DCHECK_NE(&from, this);
  const TalentPanel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TalentPanel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.TalentPanel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.TalentPanel)
    MergeFrom(*source);
  }
}

void TalentPanel::MergeFrom(const TalentPanel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.TalentPanel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slots_.MergeFrom(from.slots_);
  elems_.MergeFrom(from.elems_);
  optional_list_.MergeFrom(from.optional_list_);
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from.point() != 0) {
    _internal_set_point(from._internal_point());
  }
  if (from.has_pending_open() != 0) {
    _internal_set_has_pending_open(from._internal_has_pending_open());
  }
  if (from.reserve_num() != 0) {
    _internal_set_reserve_num(from._internal_reserve_num());
  }
}

void TalentPanel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.TalentPanel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalentPanel::CopyFrom(const TalentPanel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.TalentPanel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalentPanel::IsInitialized() const {
  return true;
}

void TalentPanel::InternalSwap(TalentPanel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  slots_.InternalSwap(&other->slots_);
  elems_.InternalSwap(&other->elems_);
  optional_list_.InternalSwap(&other->optional_list_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(point_, other->point_);
  swap(has_pending_open_, other->has_pending_open_);
  swap(reserve_num_, other->reserve_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TalentPanel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Login_Notice::InitAsDefaultInstance() {
  ::pb::talent::_Talent_Login_Notice_default_instance_._instance.get_mutable()->data_ = const_cast< ::pb::talent::TalentPanel*>(
      ::pb::talent::TalentPanel::internal_default_instance());
}
class Talent_Login_Notice::_Internal {
 public:
  static const ::pb::talent::TalentPanel& data(const Talent_Login_Notice* msg);
};

const ::pb::talent::TalentPanel&
Talent_Login_Notice::_Internal::data(const Talent_Login_Notice* msg) {
  return *msg->data_;
}
Talent_Login_Notice::Talent_Login_Notice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Login_Notice)
}
Talent_Login_Notice::Talent_Login_Notice(const Talent_Login_Notice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::pb::talent::TalentPanel(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Login_Notice)
}

void Talent_Login_Notice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Talent_Login_Notice_talent_2eproto.base);
  data_ = nullptr;
}

Talent_Login_Notice::~Talent_Login_Notice() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Login_Notice)
  SharedDtor();
}

void Talent_Login_Notice::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void Talent_Login_Notice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Login_Notice& Talent_Login_Notice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Login_Notice_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Login_Notice::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Login_Notice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Talent_Login_Notice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pb.talent.TalentPanel data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Login_Notice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Login_Notice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.talent.TalentPanel data = 1;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Login_Notice)
  return target;
}

size_t Talent_Login_Notice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Login_Notice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.talent.TalentPanel data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Login_Notice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Login_Notice)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Login_Notice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Login_Notice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Login_Notice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Login_Notice)
    MergeFrom(*source);
  }
}

void Talent_Login_Notice::MergeFrom(const Talent_Login_Notice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Login_Notice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    _internal_mutable_data()->::pb::talent::TalentPanel::MergeFrom(from._internal_data());
  }
}

void Talent_Login_Notice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Login_Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Login_Notice::CopyFrom(const Talent_Login_Notice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Login_Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Login_Notice::IsInitialized() const {
  return true;
}

void Talent_Login_Notice::InternalSwap(Talent_Login_Notice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Login_Notice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_BaseChange_Notice::InitAsDefaultInstance() {
}
class Talent_BaseChange_Notice::_Internal {
 public:
};

Talent_BaseChange_Notice::Talent_BaseChange_Notice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_BaseChange_Notice)
}
Talent_BaseChange_Notice::Talent_BaseChange_Notice(const Talent_BaseChange_Notice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_) -
    reinterpret_cast<char*>(&level_)) + sizeof(point_));
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_BaseChange_Notice)
}

void Talent_BaseChange_Notice::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_) -
      reinterpret_cast<char*>(&level_)) + sizeof(point_));
}

Talent_BaseChange_Notice::~Talent_BaseChange_Notice() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_BaseChange_Notice)
  SharedDtor();
}

void Talent_BaseChange_Notice::SharedDtor() {
}

void Talent_BaseChange_Notice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_BaseChange_Notice& Talent_BaseChange_Notice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_BaseChange_Notice_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_BaseChange_Notice::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_BaseChange_Notice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_) -
      reinterpret_cast<char*>(&level_)) + sizeof(point_));
  _internal_metadata_.Clear();
}

const char* Talent_BaseChange_Notice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 exp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 point = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          point_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_BaseChange_Notice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_BaseChange_Notice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_level(), target);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_exp(), target);
  }

  // uint32 point = 3;
  if (this->point() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_point(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_BaseChange_Notice)
  return target;
}

size_t Talent_BaseChange_Notice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_BaseChange_Notice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_level());
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_exp());
  }

  // uint32 point = 3;
  if (this->point() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_point());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_BaseChange_Notice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_BaseChange_Notice)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_BaseChange_Notice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_BaseChange_Notice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_BaseChange_Notice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_BaseChange_Notice)
    MergeFrom(*source);
  }
}

void Talent_BaseChange_Notice::MergeFrom(const Talent_BaseChange_Notice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_BaseChange_Notice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from.point() != 0) {
    _internal_set_point(from._internal_point());
  }
}

void Talent_BaseChange_Notice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_BaseChange_Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_BaseChange_Notice::CopyFrom(const Talent_BaseChange_Notice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_BaseChange_Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_BaseChange_Notice::IsInitialized() const {
  return true;
}

void Talent_BaseChange_Notice::InternalSwap(Talent_BaseChange_Notice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(point_, other->point_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_BaseChange_Notice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_ElemsChange_Notice::InitAsDefaultInstance() {
}
class Talent_ElemsChange_Notice::_Internal {
 public:
};

Talent_ElemsChange_Notice::Talent_ElemsChange_Notice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_ElemsChange_Notice)
}
Talent_ElemsChange_Notice::Talent_ElemsChange_Notice(const Talent_ElemsChange_Notice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      slots_(from.slots_),
      elems_(from.elems_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_ElemsChange_Notice)
}

void Talent_ElemsChange_Notice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Talent_ElemsChange_Notice_talent_2eproto.base);
}

Talent_ElemsChange_Notice::~Talent_ElemsChange_Notice() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_ElemsChange_Notice)
  SharedDtor();
}

void Talent_ElemsChange_Notice::SharedDtor() {
}

void Talent_ElemsChange_Notice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_ElemsChange_Notice& Talent_ElemsChange_Notice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_ElemsChange_Notice_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_ElemsChange_Notice::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_ElemsChange_Notice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slots_.Clear();
  elems_.Clear();
  _internal_metadata_.Clear();
}

const char* Talent_ElemsChange_Notice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.talent.TalentSlot slots = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .pb.talent.TalentElem elems = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elems(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_ElemsChange_Notice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_ElemsChange_Notice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.talent.TalentSlot slots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slots_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_slots(i), target, stream);
  }

  // repeated .pb.talent.TalentElem elems = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_elems_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_elems(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_ElemsChange_Notice)
  return target;
}

size_t Talent_ElemsChange_Notice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_ElemsChange_Notice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.talent.TalentSlot slots = 1;
  total_size += 1UL * this->_internal_slots_size();
  for (const auto& msg : this->slots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .pb.talent.TalentElem elems = 2;
  total_size += 1UL * this->_internal_elems_size();
  for (const auto& msg : this->elems_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_ElemsChange_Notice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_ElemsChange_Notice)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_ElemsChange_Notice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_ElemsChange_Notice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_ElemsChange_Notice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_ElemsChange_Notice)
    MergeFrom(*source);
  }
}

void Talent_ElemsChange_Notice::MergeFrom(const Talent_ElemsChange_Notice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_ElemsChange_Notice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slots_.MergeFrom(from.slots_);
  elems_.MergeFrom(from.elems_);
}

void Talent_ElemsChange_Notice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_ElemsChange_Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_ElemsChange_Notice::CopyFrom(const Talent_ElemsChange_Notice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_ElemsChange_Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_ElemsChange_Notice::IsInitialized() const {
  return true;
}

void Talent_ElemsChange_Notice::InternalSwap(Talent_ElemsChange_Notice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  slots_.InternalSwap(&other->slots_);
  elems_.InternalSwap(&other->elems_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_ElemsChange_Notice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Open_Req::InitAsDefaultInstance() {
}
class Talent_Open_Req::_Internal {
 public:
};

Talent_Open_Req::Talent_Open_Req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Open_Req)
}
Talent_Open_Req::Talent_Open_Req(const Talent_Open_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Open_Req)
}

void Talent_Open_Req::SharedCtor() {
}

Talent_Open_Req::~Talent_Open_Req() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Open_Req)
  SharedDtor();
}

void Talent_Open_Req::SharedDtor() {
}

void Talent_Open_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Open_Req& Talent_Open_Req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Open_Req_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Open_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Open_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Talent_Open_Req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Open_Req::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Open_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Open_Req)
  return target;
}

size_t Talent_Open_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Open_Req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Open_Req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Open_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Open_Req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Open_Req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Open_Req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Open_Req)
    MergeFrom(*source);
  }
}

void Talent_Open_Req::MergeFrom(const Talent_Open_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Open_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Talent_Open_Req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Open_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Open_Req::CopyFrom(const Talent_Open_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Open_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Open_Req::IsInitialized() const {
  return true;
}

void Talent_Open_Req::InternalSwap(Talent_Open_Req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Open_Req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Open_Response::InitAsDefaultInstance() {
}
class Talent_Open_Response::_Internal {
 public:
};

Talent_Open_Response::Talent_Open_Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Open_Response)
}
Talent_Open_Response::Talent_Open_Response(const Talent_Open_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserve_num_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(reserve_num_));
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Open_Response)
}

void Talent_Open_Response::SharedCtor() {
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserve_num_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(reserve_num_));
}

Talent_Open_Response::~Talent_Open_Response() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Open_Response)
  SharedDtor();
}

void Talent_Open_Response::SharedDtor() {
}

void Talent_Open_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Open_Response& Talent_Open_Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Open_Response_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Open_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Open_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserve_num_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(reserve_num_));
  _internal_metadata_.Clear();
}

const char* Talent_Open_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 reserve_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          reserve_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Open_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Open_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  // uint32 reserve_num = 2;
  if (this->reserve_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_reserve_num(), target);
  }

  // repeated uint64 data = 3;
  {
    int byte_size = _data_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Open_Response)
  return target;
}

size_t Talent_Open_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Open_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 data = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  // uint32 reserve_num = 2;
  if (this->reserve_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserve_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Open_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Open_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Open_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Open_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Open_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Open_Response)
    MergeFrom(*source);
  }
}

void Talent_Open_Response::MergeFrom(const Talent_Open_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Open_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
  if (from.reserve_num() != 0) {
    _internal_set_reserve_num(from._internal_reserve_num());
  }
}

void Talent_Open_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Open_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Open_Response::CopyFrom(const Talent_Open_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Open_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Open_Response::IsInitialized() const {
  return true;
}

void Talent_Open_Response::InternalSwap(Talent_Open_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(error_code_, other->error_code_);
  swap(reserve_num_, other->reserve_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Open_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Choose_Req::InitAsDefaultInstance() {
}
class Talent_Choose_Req::_Internal {
 public:
};

Talent_Choose_Req::Talent_Choose_Req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Choose_Req)
}
Talent_Choose_Req::Talent_Choose_Req(const Talent_Choose_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      id_(from.id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Choose_Req)
}

void Talent_Choose_Req::SharedCtor() {
}

Talent_Choose_Req::~Talent_Choose_Req() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Choose_Req)
  SharedDtor();
}

void Talent_Choose_Req::SharedDtor() {
}

void Talent_Choose_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Choose_Req& Talent_Choose_Req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Choose_Req_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Choose_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Choose_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.Clear();
  _internal_metadata_.Clear();
}

const char* Talent_Choose_Req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_id(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Choose_Req::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Choose_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 id = 1;
  {
    int byte_size = _id_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_id(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Choose_Req)
  return target;
}

size_t Talent_Choose_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Choose_Req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 id = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->id_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _id_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Choose_Req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Choose_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Choose_Req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Choose_Req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Choose_Req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Choose_Req)
    MergeFrom(*source);
  }
}

void Talent_Choose_Req::MergeFrom(const Talent_Choose_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Choose_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
}

void Talent_Choose_Req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Choose_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Choose_Req::CopyFrom(const Talent_Choose_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Choose_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Choose_Req::IsInitialized() const {
  return true;
}

void Talent_Choose_Req::InternalSwap(Talent_Choose_Req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.InternalSwap(&other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Choose_Req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Choose_Response::InitAsDefaultInstance() {
}
class Talent_Choose_Response::_Internal {
 public:
};

Talent_Choose_Response::Talent_Choose_Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Choose_Response)
}
Talent_Choose_Response::Talent_Choose_Response(const Talent_Choose_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Choose_Response)
}

void Talent_Choose_Response::SharedCtor() {
  error_code_ = 0u;
}

Talent_Choose_Response::~Talent_Choose_Response() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Choose_Response)
  SharedDtor();
}

void Talent_Choose_Response::SharedDtor() {
}

void Talent_Choose_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Choose_Response& Talent_Choose_Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Choose_Response_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Choose_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Choose_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_code_ = 0u;
  _internal_metadata_.Clear();
}

const char* Talent_Choose_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Choose_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Choose_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Choose_Response)
  return target;
}

size_t Talent_Choose_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Choose_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Choose_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Choose_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Choose_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Choose_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Choose_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Choose_Response)
    MergeFrom(*source);
  }
}

void Talent_Choose_Response::MergeFrom(const Talent_Choose_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Choose_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void Talent_Choose_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Choose_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Choose_Response::CopyFrom(const Talent_Choose_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Choose_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Choose_Response::IsInitialized() const {
  return true;
}

void Talent_Choose_Response::InternalSwap(Talent_Choose_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Choose_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Activate_Req::InitAsDefaultInstance() {
}
class Talent_Activate_Req::_Internal {
 public:
};

Talent_Activate_Req::Talent_Activate_Req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Activate_Req)
}
Talent_Activate_Req::Talent_Activate_Req(const Talent_Activate_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Activate_Req)
}

void Talent_Activate_Req::SharedCtor() {
  id_ = PROTOBUF_ULONGLONG(0);
}

Talent_Activate_Req::~Talent_Activate_Req() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Activate_Req)
  SharedDtor();
}

void Talent_Activate_Req::SharedDtor() {
}

void Talent_Activate_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Activate_Req& Talent_Activate_Req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Activate_Req_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Activate_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Activate_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Talent_Activate_Req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Activate_Req::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Activate_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Activate_Req)
  return target;
}

size_t Talent_Activate_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Activate_Req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Activate_Req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Activate_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Activate_Req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Activate_Req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Activate_Req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Activate_Req)
    MergeFrom(*source);
  }
}

void Talent_Activate_Req::MergeFrom(const Talent_Activate_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Activate_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Talent_Activate_Req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Activate_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Activate_Req::CopyFrom(const Talent_Activate_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Activate_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Activate_Req::IsInitialized() const {
  return true;
}

void Talent_Activate_Req::InternalSwap(Talent_Activate_Req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Activate_Req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Activate_Response::InitAsDefaultInstance() {
}
class Talent_Activate_Response::_Internal {
 public:
};

Talent_Activate_Response::Talent_Activate_Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Activate_Response)
}
Talent_Activate_Response::Talent_Activate_Response(const Talent_Activate_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Activate_Response)
}

void Talent_Activate_Response::SharedCtor() {
  error_code_ = 0u;
}

Talent_Activate_Response::~Talent_Activate_Response() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Activate_Response)
  SharedDtor();
}

void Talent_Activate_Response::SharedDtor() {
}

void Talent_Activate_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Activate_Response& Talent_Activate_Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Activate_Response_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Activate_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Activate_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_code_ = 0u;
  _internal_metadata_.Clear();
}

const char* Talent_Activate_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Activate_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Activate_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Activate_Response)
  return target;
}

size_t Talent_Activate_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Activate_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Activate_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Activate_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Activate_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Activate_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Activate_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Activate_Response)
    MergeFrom(*source);
  }
}

void Talent_Activate_Response::MergeFrom(const Talent_Activate_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Activate_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void Talent_Activate_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Activate_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Activate_Response::CopyFrom(const Talent_Activate_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Activate_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Activate_Response::IsInitialized() const {
  return true;
}

void Talent_Activate_Response::InternalSwap(Talent_Activate_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Activate_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Unload_Req::InitAsDefaultInstance() {
}
class Talent_Unload_Req::_Internal {
 public:
};

Talent_Unload_Req::Talent_Unload_Req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Unload_Req)
}
Talent_Unload_Req::Talent_Unload_Req(const Talent_Unload_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Unload_Req)
}

void Talent_Unload_Req::SharedCtor() {
  id_ = PROTOBUF_ULONGLONG(0);
}

Talent_Unload_Req::~Talent_Unload_Req() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Unload_Req)
  SharedDtor();
}

void Talent_Unload_Req::SharedDtor() {
}

void Talent_Unload_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Unload_Req& Talent_Unload_Req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Unload_Req_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Unload_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Unload_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Talent_Unload_Req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Unload_Req::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Unload_Req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Unload_Req)
  return target;
}

size_t Talent_Unload_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Unload_Req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Unload_Req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Unload_Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Unload_Req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Unload_Req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Unload_Req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Unload_Req)
    MergeFrom(*source);
  }
}

void Talent_Unload_Req::MergeFrom(const Talent_Unload_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Unload_Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Talent_Unload_Req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Unload_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Unload_Req::CopyFrom(const Talent_Unload_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Unload_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Unload_Req::IsInitialized() const {
  return true;
}

void Talent_Unload_Req::InternalSwap(Talent_Unload_Req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Unload_Req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Talent_Unload_Response::InitAsDefaultInstance() {
}
class Talent_Unload_Response::_Internal {
 public:
};

Talent_Unload_Response::Talent_Unload_Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.talent.Talent_Unload_Response)
}
Talent_Unload_Response::Talent_Unload_Response(const Talent_Unload_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:pb.talent.Talent_Unload_Response)
}

void Talent_Unload_Response::SharedCtor() {
  error_code_ = 0u;
}

Talent_Unload_Response::~Talent_Unload_Response() {
  // @@protoc_insertion_point(destructor:pb.talent.Talent_Unload_Response)
  SharedDtor();
}

void Talent_Unload_Response::SharedDtor() {
}

void Talent_Unload_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Talent_Unload_Response& Talent_Unload_Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Talent_Unload_Response_talent_2eproto.base);
  return *internal_default_instance();
}


void Talent_Unload_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.talent.Talent_Unload_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_code_ = 0u;
  _internal_metadata_.Clear();
}

const char* Talent_Unload_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Talent_Unload_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.talent.Talent_Unload_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.talent.Talent_Unload_Response)
  return target;
}

size_t Talent_Unload_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.talent.Talent_Unload_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Talent_Unload_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.talent.Talent_Unload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Talent_Unload_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Talent_Unload_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.talent.Talent_Unload_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.talent.Talent_Unload_Response)
    MergeFrom(*source);
  }
}

void Talent_Unload_Response::MergeFrom(const Talent_Unload_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.talent.Talent_Unload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void Talent_Unload_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.talent.Talent_Unload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Talent_Unload_Response::CopyFrom(const Talent_Unload_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.talent.Talent_Unload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Talent_Unload_Response::IsInitialized() const {
  return true;
}

void Talent_Unload_Response::InternalSwap(Talent_Unload_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Talent_Unload_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace talent
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::talent::TalentSlot* Arena::CreateMaybeMessage< ::pb::talent::TalentSlot >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::TalentSlot >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::TalentElem* Arena::CreateMaybeMessage< ::pb::talent::TalentElem >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::TalentElem >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::TalentPanel* Arena::CreateMaybeMessage< ::pb::talent::TalentPanel >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::TalentPanel >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Login_Notice* Arena::CreateMaybeMessage< ::pb::talent::Talent_Login_Notice >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Login_Notice >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_BaseChange_Notice* Arena::CreateMaybeMessage< ::pb::talent::Talent_BaseChange_Notice >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_BaseChange_Notice >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_ElemsChange_Notice* Arena::CreateMaybeMessage< ::pb::talent::Talent_ElemsChange_Notice >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_ElemsChange_Notice >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Open_Req* Arena::CreateMaybeMessage< ::pb::talent::Talent_Open_Req >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Open_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Open_Response* Arena::CreateMaybeMessage< ::pb::talent::Talent_Open_Response >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Open_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Choose_Req* Arena::CreateMaybeMessage< ::pb::talent::Talent_Choose_Req >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Choose_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Choose_Response* Arena::CreateMaybeMessage< ::pb::talent::Talent_Choose_Response >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Choose_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Activate_Req* Arena::CreateMaybeMessage< ::pb::talent::Talent_Activate_Req >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Activate_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Activate_Response* Arena::CreateMaybeMessage< ::pb::talent::Talent_Activate_Response >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Activate_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Unload_Req* Arena::CreateMaybeMessage< ::pb::talent::Talent_Unload_Req >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Unload_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::talent::Talent_Unload_Response* Arena::CreateMaybeMessage< ::pb::talent::Talent_Unload_Response >(Arena* arena) {
  return Arena::CreateInternal< ::pb::talent::Talent_Unload_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
