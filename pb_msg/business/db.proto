syntax = "proto3";

package pb.db;

enum E_Field_Type
{
	E_Field_Type_Int = 0;
	E_Field_Type_String = 1;
	E_Field_Type_Double = 2;
}

message DB_OP_Condition
{
	uint32 idx = 1;
	uint32 op  = 2;     // (0,=) (1,>) (2,<)
	string value = 3;  //tbl[idx]=(value)
	int64  i64val = 4;
	uint32 next_logic_op = 5; //(0,&&) (1,||)
}


message DB_OP_User {	
	enum Action {	
	QUERY_UserTblData = 0;  //查询指定表user_id的数据
	QUERY_FriendTblData = 1;  //查询好友相关表的数据
	}
	Action 	action 		= 1;   
	DB_OP_Condition user_id = 2;
	DB_OP_Condition game_id = 3;
	uint32  tbl_type    = 4;    //对应game_table中的type，来查询同一类型的表数据，如玩家相关的表
	string  fail_function_name = 5; //没有记录时，执行的脚本函数

}


enum E_DB_Cmd
{	
	E_DB_Cmd_Update = 0; //更新表字段
	E_DB_Cmd_SynFileDB=1; //存储在自定义文件中的DB数据
	E_DB_Cmd_DelFileDB = 2; //删除自定义文件中DB数据，如删除定时器
	E_DB_Cmd_SynEffProp = 3;//同步各种属性加成
	E_DB_Cmd_DataStart = 4;//数据开始
	E_DB_Cmd_DataEnd = 5;//数据结束
	E_DB_Cmd_QueryData = 6;//自定义数据查询
	E_DB_Cmd_GuildBattleReport = 7;//联盟战报

}

message Base_Cmd
{
	E_DB_Cmd cmd  =1;
}


message DB_Field
{
	uint32		idx   = 1;	
	int64 		i64val = 2;
  	bytes 		strval = 3;
  	double 		dval = 4;
	E_Field_Type	field_type = 5;
}

message DB_Record
{
	repeated DB_Field vec_fields = 1;
}

message DB_Recordset
{
	uint32 id_table = 1;
	string    name     = 2;
	repeated DB_Record vec_records = 3;
}

message DB_Record_OP
{
	enum Action {
	UPDATE = 0;
	NEW    = 1;
	REMOVE = 2;
	}
	Action 	action 		= 1;
	string  name        = 2;
	uint32  tbl_id      = 3;
	DB_Record record    = 4;
}

message User_DB_Record_OPS
{
	repeated DB_Record_OP record_ops = 1;
}


message User_DB_Recordset
{
	int64 user_id = 1;
	uint32 game_id = 2;
	DB_Recordset data_set = 3;
}

message User_DB_Recordset_Ext
{
	E_DB_Cmd cmd = 1;
	DB_Recordset data_set = 2;
}

message DB_FieldMeta
{
	string name = 1;
	uint32 type = 2;
	uint32 attr = 3;
	uint32 len  = 4;
}

message DB_TableMeta
{
	string name = 1;
	uint32 tbl_id = 2;
	repeated DB_FieldMeta vec_fields = 3;
}

message DB_Metas
{
	repeated DB_TableMeta vec_tables = 1;
}

message DB_Update
{
	E_DB_Cmd cmd  =1;
	DB_Recordset data_set = 2;
}


message DB_Delete
{
	E_DB_Cmd cmd  =1;
	uint32 tbl_id = 2;
	repeated uint64 vec_ids = 3;
}

message Key_Value
{
	uint32  key = 1;
	int64   value =2;
}

message EffectProp
{
	uint32 range = 1;  //0:全局 1：主城 2:分城
	repeated Key_Value  vec_effect = 2;
}

message DB_EffectProp
{	
	E_DB_Cmd cmd  =1;
	repeated EffectProp  vec_prop = 2;
}

message DB_Add_Recordset
{
	int64 target_id		= 1;
	uint32 target_game_id	= 2;
	uint32 id_table		= 3;
	string    name		= 4;
	DB_Record record	= 5;
}

message DB_DataFlag
{	
	E_DB_Cmd cmd = 1;
	int64 user_id = 2;
}

message Query_Recordset
{
	E_DB_Cmd cmd  =1;
	uint32 id_table = 2;//表ID
	repeated uint32 field_list = 3;//字段索引ID
	repeated uint32 key_list = 4;//数据库主键ID
	repeated DB_Record vec_records = 5;//数据集
}