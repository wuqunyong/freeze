// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY SCRIPT, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// Source: apie_account.account
// ---------------------------------------------------------------------

#pragma once

#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <map>
#include <memory>
#include <string>
#include <tuple>
#include <vector>

#include "apie.h"

namespace apie {
namespace dbt_account {

class account_AutoGen : public DeclarativeBase,
                        public std::enable_shared_from_this<account_AutoGen> {
private:
  struct db_fields {
    uint64_t account_id;
    uint32_t db_id;
    int64_t register_time;
    int64_t modified_time;
  };

  enum Fields {
    account_id = 1,
    db_id = 2,
    register_time = 3,
    modified_time = 4,
  };

public:
  static std::shared_ptr<account_AutoGen> Create(uint64_t account_id) {
    return std::shared_ptr<account_AutoGen>(new account_AutoGen(account_id));
  }

  account_AutoGen(uint64_t account_id) {
    this->fields.account_id = account_id;

    this->bindTable(DeclarativeBase::DBType::DBT_Account, getFactoryName());
  }

  void set_account_id(uint64_t account_id) {
    this->fields.account_id = account_id;
    this->markDirty({account_AutoGen::account_id});
  }

  uint64_t get_account_id() { return this->fields.account_id; }

  void set_db_id(uint32_t db_id) {
    this->fields.db_id = db_id;
    this->markDirty({account_AutoGen::db_id});
  }

  uint32_t get_db_id() { return this->fields.db_id; }

  void set_register_time(int64_t register_time) {
    this->fields.register_time = register_time;
    this->markDirty({account_AutoGen::register_time});
  }

  int64_t get_register_time() { return this->fields.register_time; }

  void set_modified_time(int64_t modified_time) {
    this->fields.modified_time = modified_time;
    this->markDirty({account_AutoGen::modified_time});
  }

  int64_t get_modified_time() { return this->fields.modified_time; }

  DAO_DEFINE_TYPE_INTRUSIVE_MACRO(account_AutoGen, db_fields, account);
};

} // namespace dbt_account

APIE_REGISTER_TABLE(DeclarativeBase::DBType::DBT_Account,
                    apie::dbt_account::account_AutoGen, account)

} // namespace apie
