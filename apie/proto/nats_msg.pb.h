// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nats_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_nats_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_nats_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "rpc_msg.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nats_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_nats_5fmsg_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nats_5fmsg_2eproto;
namespace nats_msg {
class NATS_MSG_PRXOY;
struct NATS_MSG_PRXOYDefaultTypeInternal;
extern NATS_MSG_PRXOYDefaultTypeInternal _NATS_MSG_PRXOY_default_instance_;
}  // namespace nats_msg
PROTOBUF_NAMESPACE_OPEN
template<> ::nats_msg::NATS_MSG_PRXOY* Arena::CreateMaybeMessage<::nats_msg::NATS_MSG_PRXOY>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace nats_msg {

// ===================================================================

class NATS_MSG_PRXOY final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:nats_msg.NATS_MSG_PRXOY) */ {
 public:
  inline NATS_MSG_PRXOY() : NATS_MSG_PRXOY(nullptr) {}
  ~NATS_MSG_PRXOY() override;
  explicit PROTOBUF_CONSTEXPR NATS_MSG_PRXOY(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NATS_MSG_PRXOY(const NATS_MSG_PRXOY& from);
  NATS_MSG_PRXOY(NATS_MSG_PRXOY&& from) noexcept
    : NATS_MSG_PRXOY() {
    *this = ::std::move(from);
  }

  inline NATS_MSG_PRXOY& operator=(const NATS_MSG_PRXOY& from) {
    CopyFrom(from);
    return *this;
  }
  inline NATS_MSG_PRXOY& operator=(NATS_MSG_PRXOY&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NATS_MSG_PRXOY& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kRpcRequest = 100,
    kRpcResponse = 101,
    kMultiplexerForward = 102,
    kDemultiplexerForward = 103,
    MSG_NOT_SET = 0,
  };

  static inline const NATS_MSG_PRXOY* internal_default_instance() {
    return reinterpret_cast<const NATS_MSG_PRXOY*>(
               &_NATS_MSG_PRXOY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NATS_MSG_PRXOY& a, NATS_MSG_PRXOY& b) {
    a.Swap(&b);
  }
  inline void Swap(NATS_MSG_PRXOY* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NATS_MSG_PRXOY* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NATS_MSG_PRXOY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NATS_MSG_PRXOY>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NATS_MSG_PRXOY& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const NATS_MSG_PRXOY& from) {
    NATS_MSG_PRXOY::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NATS_MSG_PRXOY* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "nats_msg.NATS_MSG_PRXOY";
  }
  protected:
  explicit NATS_MSG_PRXOY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRpcRequestFieldNumber = 100,
    kRpcResponseFieldNumber = 101,
    kMultiplexerForwardFieldNumber = 102,
    kDemultiplexerForwardFieldNumber = 103,
  };
  // .rpc_msg.RPC_REQUEST rpc_request = 100;
  bool has_rpc_request() const;
  private:
  bool _internal_has_rpc_request() const;
  public:
  void clear_rpc_request();
  const ::rpc_msg::RPC_REQUEST& rpc_request() const;
  PROTOBUF_NODISCARD ::rpc_msg::RPC_REQUEST* release_rpc_request();
  ::rpc_msg::RPC_REQUEST* mutable_rpc_request();
  void set_allocated_rpc_request(::rpc_msg::RPC_REQUEST* rpc_request);
  private:
  const ::rpc_msg::RPC_REQUEST& _internal_rpc_request() const;
  ::rpc_msg::RPC_REQUEST* _internal_mutable_rpc_request();
  public:
  void unsafe_arena_set_allocated_rpc_request(
      ::rpc_msg::RPC_REQUEST* rpc_request);
  ::rpc_msg::RPC_REQUEST* unsafe_arena_release_rpc_request();

  // .rpc_msg.RPC_RESPONSE rpc_response = 101;
  bool has_rpc_response() const;
  private:
  bool _internal_has_rpc_response() const;
  public:
  void clear_rpc_response();
  const ::rpc_msg::RPC_RESPONSE& rpc_response() const;
  PROTOBUF_NODISCARD ::rpc_msg::RPC_RESPONSE* release_rpc_response();
  ::rpc_msg::RPC_RESPONSE* mutable_rpc_response();
  void set_allocated_rpc_response(::rpc_msg::RPC_RESPONSE* rpc_response);
  private:
  const ::rpc_msg::RPC_RESPONSE& _internal_rpc_response() const;
  ::rpc_msg::RPC_RESPONSE* _internal_mutable_rpc_response();
  public:
  void unsafe_arena_set_allocated_rpc_response(
      ::rpc_msg::RPC_RESPONSE* rpc_response);
  ::rpc_msg::RPC_RESPONSE* unsafe_arena_release_rpc_response();

  // .rpc_msg.RPC_Multiplexer_Forward multiplexer_forward = 102;
  bool has_multiplexer_forward() const;
  private:
  bool _internal_has_multiplexer_forward() const;
  public:
  void clear_multiplexer_forward();
  const ::rpc_msg::RPC_Multiplexer_Forward& multiplexer_forward() const;
  PROTOBUF_NODISCARD ::rpc_msg::RPC_Multiplexer_Forward* release_multiplexer_forward();
  ::rpc_msg::RPC_Multiplexer_Forward* mutable_multiplexer_forward();
  void set_allocated_multiplexer_forward(::rpc_msg::RPC_Multiplexer_Forward* multiplexer_forward);
  private:
  const ::rpc_msg::RPC_Multiplexer_Forward& _internal_multiplexer_forward() const;
  ::rpc_msg::RPC_Multiplexer_Forward* _internal_mutable_multiplexer_forward();
  public:
  void unsafe_arena_set_allocated_multiplexer_forward(
      ::rpc_msg::RPC_Multiplexer_Forward* multiplexer_forward);
  ::rpc_msg::RPC_Multiplexer_Forward* unsafe_arena_release_multiplexer_forward();

  // .rpc_msg.PRC_DeMultiplexer_Forward demultiplexer_forward = 103;
  bool has_demultiplexer_forward() const;
  private:
  bool _internal_has_demultiplexer_forward() const;
  public:
  void clear_demultiplexer_forward();
  const ::rpc_msg::PRC_DeMultiplexer_Forward& demultiplexer_forward() const;
  PROTOBUF_NODISCARD ::rpc_msg::PRC_DeMultiplexer_Forward* release_demultiplexer_forward();
  ::rpc_msg::PRC_DeMultiplexer_Forward* mutable_demultiplexer_forward();
  void set_allocated_demultiplexer_forward(::rpc_msg::PRC_DeMultiplexer_Forward* demultiplexer_forward);
  private:
  const ::rpc_msg::PRC_DeMultiplexer_Forward& _internal_demultiplexer_forward() const;
  ::rpc_msg::PRC_DeMultiplexer_Forward* _internal_mutable_demultiplexer_forward();
  public:
  void unsafe_arena_set_allocated_demultiplexer_forward(
      ::rpc_msg::PRC_DeMultiplexer_Forward* demultiplexer_forward);
  ::rpc_msg::PRC_DeMultiplexer_Forward* unsafe_arena_release_demultiplexer_forward();

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:nats_msg.NATS_MSG_PRXOY)
 private:
  class _Internal;
  void set_has_rpc_request();
  void set_has_rpc_response();
  void set_has_multiplexer_forward();
  void set_has_demultiplexer_forward();

  inline bool has_msg() const;
  inline void clear_has_msg();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::rpc_msg::RPC_REQUEST* rpc_request_;
      ::rpc_msg::RPC_RESPONSE* rpc_response_;
      ::rpc_msg::RPC_Multiplexer_Forward* multiplexer_forward_;
      ::rpc_msg::PRC_DeMultiplexer_Forward* demultiplexer_forward_;
    } msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nats_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NATS_MSG_PRXOY

// .rpc_msg.RPC_REQUEST rpc_request = 100;
inline bool NATS_MSG_PRXOY::_internal_has_rpc_request() const {
  return msg_case() == kRpcRequest;
}
inline bool NATS_MSG_PRXOY::has_rpc_request() const {
  return _internal_has_rpc_request();
}
inline void NATS_MSG_PRXOY::set_has_rpc_request() {
  _impl_._oneof_case_[0] = kRpcRequest;
}
inline ::rpc_msg::RPC_REQUEST* NATS_MSG_PRXOY::release_rpc_request() {
  // @@protoc_insertion_point(field_release:nats_msg.NATS_MSG_PRXOY.rpc_request)
  if (_internal_has_rpc_request()) {
    clear_has_msg();
    ::rpc_msg::RPC_REQUEST* temp = _impl_.msg_.rpc_request_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.rpc_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc_msg::RPC_REQUEST& NATS_MSG_PRXOY::_internal_rpc_request() const {
  return _internal_has_rpc_request()
      ? *_impl_.msg_.rpc_request_
      : reinterpret_cast< ::rpc_msg::RPC_REQUEST&>(::rpc_msg::_RPC_REQUEST_default_instance_);
}
inline const ::rpc_msg::RPC_REQUEST& NATS_MSG_PRXOY::rpc_request() const {
  // @@protoc_insertion_point(field_get:nats_msg.NATS_MSG_PRXOY.rpc_request)
  return _internal_rpc_request();
}
inline ::rpc_msg::RPC_REQUEST* NATS_MSG_PRXOY::unsafe_arena_release_rpc_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:nats_msg.NATS_MSG_PRXOY.rpc_request)
  if (_internal_has_rpc_request()) {
    clear_has_msg();
    ::rpc_msg::RPC_REQUEST* temp = _impl_.msg_.rpc_request_;
    _impl_.msg_.rpc_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NATS_MSG_PRXOY::unsafe_arena_set_allocated_rpc_request(::rpc_msg::RPC_REQUEST* rpc_request) {
  clear_msg();
  if (rpc_request) {
    set_has_rpc_request();
    _impl_.msg_.rpc_request_ = rpc_request;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nats_msg.NATS_MSG_PRXOY.rpc_request)
}
inline ::rpc_msg::RPC_REQUEST* NATS_MSG_PRXOY::_internal_mutable_rpc_request() {
  if (!_internal_has_rpc_request()) {
    clear_msg();
    set_has_rpc_request();
    _impl_.msg_.rpc_request_ = CreateMaybeMessage< ::rpc_msg::RPC_REQUEST >(GetArenaForAllocation());
  }
  return _impl_.msg_.rpc_request_;
}
inline ::rpc_msg::RPC_REQUEST* NATS_MSG_PRXOY::mutable_rpc_request() {
  ::rpc_msg::RPC_REQUEST* _msg = _internal_mutable_rpc_request();
  // @@protoc_insertion_point(field_mutable:nats_msg.NATS_MSG_PRXOY.rpc_request)
  return _msg;
}

// .rpc_msg.RPC_RESPONSE rpc_response = 101;
inline bool NATS_MSG_PRXOY::_internal_has_rpc_response() const {
  return msg_case() == kRpcResponse;
}
inline bool NATS_MSG_PRXOY::has_rpc_response() const {
  return _internal_has_rpc_response();
}
inline void NATS_MSG_PRXOY::set_has_rpc_response() {
  _impl_._oneof_case_[0] = kRpcResponse;
}
inline ::rpc_msg::RPC_RESPONSE* NATS_MSG_PRXOY::release_rpc_response() {
  // @@protoc_insertion_point(field_release:nats_msg.NATS_MSG_PRXOY.rpc_response)
  if (_internal_has_rpc_response()) {
    clear_has_msg();
    ::rpc_msg::RPC_RESPONSE* temp = _impl_.msg_.rpc_response_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.rpc_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc_msg::RPC_RESPONSE& NATS_MSG_PRXOY::_internal_rpc_response() const {
  return _internal_has_rpc_response()
      ? *_impl_.msg_.rpc_response_
      : reinterpret_cast< ::rpc_msg::RPC_RESPONSE&>(::rpc_msg::_RPC_RESPONSE_default_instance_);
}
inline const ::rpc_msg::RPC_RESPONSE& NATS_MSG_PRXOY::rpc_response() const {
  // @@protoc_insertion_point(field_get:nats_msg.NATS_MSG_PRXOY.rpc_response)
  return _internal_rpc_response();
}
inline ::rpc_msg::RPC_RESPONSE* NATS_MSG_PRXOY::unsafe_arena_release_rpc_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:nats_msg.NATS_MSG_PRXOY.rpc_response)
  if (_internal_has_rpc_response()) {
    clear_has_msg();
    ::rpc_msg::RPC_RESPONSE* temp = _impl_.msg_.rpc_response_;
    _impl_.msg_.rpc_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NATS_MSG_PRXOY::unsafe_arena_set_allocated_rpc_response(::rpc_msg::RPC_RESPONSE* rpc_response) {
  clear_msg();
  if (rpc_response) {
    set_has_rpc_response();
    _impl_.msg_.rpc_response_ = rpc_response;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nats_msg.NATS_MSG_PRXOY.rpc_response)
}
inline ::rpc_msg::RPC_RESPONSE* NATS_MSG_PRXOY::_internal_mutable_rpc_response() {
  if (!_internal_has_rpc_response()) {
    clear_msg();
    set_has_rpc_response();
    _impl_.msg_.rpc_response_ = CreateMaybeMessage< ::rpc_msg::RPC_RESPONSE >(GetArenaForAllocation());
  }
  return _impl_.msg_.rpc_response_;
}
inline ::rpc_msg::RPC_RESPONSE* NATS_MSG_PRXOY::mutable_rpc_response() {
  ::rpc_msg::RPC_RESPONSE* _msg = _internal_mutable_rpc_response();
  // @@protoc_insertion_point(field_mutable:nats_msg.NATS_MSG_PRXOY.rpc_response)
  return _msg;
}

// .rpc_msg.RPC_Multiplexer_Forward multiplexer_forward = 102;
inline bool NATS_MSG_PRXOY::_internal_has_multiplexer_forward() const {
  return msg_case() == kMultiplexerForward;
}
inline bool NATS_MSG_PRXOY::has_multiplexer_forward() const {
  return _internal_has_multiplexer_forward();
}
inline void NATS_MSG_PRXOY::set_has_multiplexer_forward() {
  _impl_._oneof_case_[0] = kMultiplexerForward;
}
inline ::rpc_msg::RPC_Multiplexer_Forward* NATS_MSG_PRXOY::release_multiplexer_forward() {
  // @@protoc_insertion_point(field_release:nats_msg.NATS_MSG_PRXOY.multiplexer_forward)
  if (_internal_has_multiplexer_forward()) {
    clear_has_msg();
    ::rpc_msg::RPC_Multiplexer_Forward* temp = _impl_.msg_.multiplexer_forward_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.multiplexer_forward_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc_msg::RPC_Multiplexer_Forward& NATS_MSG_PRXOY::_internal_multiplexer_forward() const {
  return _internal_has_multiplexer_forward()
      ? *_impl_.msg_.multiplexer_forward_
      : reinterpret_cast< ::rpc_msg::RPC_Multiplexer_Forward&>(::rpc_msg::_RPC_Multiplexer_Forward_default_instance_);
}
inline const ::rpc_msg::RPC_Multiplexer_Forward& NATS_MSG_PRXOY::multiplexer_forward() const {
  // @@protoc_insertion_point(field_get:nats_msg.NATS_MSG_PRXOY.multiplexer_forward)
  return _internal_multiplexer_forward();
}
inline ::rpc_msg::RPC_Multiplexer_Forward* NATS_MSG_PRXOY::unsafe_arena_release_multiplexer_forward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:nats_msg.NATS_MSG_PRXOY.multiplexer_forward)
  if (_internal_has_multiplexer_forward()) {
    clear_has_msg();
    ::rpc_msg::RPC_Multiplexer_Forward* temp = _impl_.msg_.multiplexer_forward_;
    _impl_.msg_.multiplexer_forward_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NATS_MSG_PRXOY::unsafe_arena_set_allocated_multiplexer_forward(::rpc_msg::RPC_Multiplexer_Forward* multiplexer_forward) {
  clear_msg();
  if (multiplexer_forward) {
    set_has_multiplexer_forward();
    _impl_.msg_.multiplexer_forward_ = multiplexer_forward;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nats_msg.NATS_MSG_PRXOY.multiplexer_forward)
}
inline ::rpc_msg::RPC_Multiplexer_Forward* NATS_MSG_PRXOY::_internal_mutable_multiplexer_forward() {
  if (!_internal_has_multiplexer_forward()) {
    clear_msg();
    set_has_multiplexer_forward();
    _impl_.msg_.multiplexer_forward_ = CreateMaybeMessage< ::rpc_msg::RPC_Multiplexer_Forward >(GetArenaForAllocation());
  }
  return _impl_.msg_.multiplexer_forward_;
}
inline ::rpc_msg::RPC_Multiplexer_Forward* NATS_MSG_PRXOY::mutable_multiplexer_forward() {
  ::rpc_msg::RPC_Multiplexer_Forward* _msg = _internal_mutable_multiplexer_forward();
  // @@protoc_insertion_point(field_mutable:nats_msg.NATS_MSG_PRXOY.multiplexer_forward)
  return _msg;
}

// .rpc_msg.PRC_DeMultiplexer_Forward demultiplexer_forward = 103;
inline bool NATS_MSG_PRXOY::_internal_has_demultiplexer_forward() const {
  return msg_case() == kDemultiplexerForward;
}
inline bool NATS_MSG_PRXOY::has_demultiplexer_forward() const {
  return _internal_has_demultiplexer_forward();
}
inline void NATS_MSG_PRXOY::set_has_demultiplexer_forward() {
  _impl_._oneof_case_[0] = kDemultiplexerForward;
}
inline ::rpc_msg::PRC_DeMultiplexer_Forward* NATS_MSG_PRXOY::release_demultiplexer_forward() {
  // @@protoc_insertion_point(field_release:nats_msg.NATS_MSG_PRXOY.demultiplexer_forward)
  if (_internal_has_demultiplexer_forward()) {
    clear_has_msg();
    ::rpc_msg::PRC_DeMultiplexer_Forward* temp = _impl_.msg_.demultiplexer_forward_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.demultiplexer_forward_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rpc_msg::PRC_DeMultiplexer_Forward& NATS_MSG_PRXOY::_internal_demultiplexer_forward() const {
  return _internal_has_demultiplexer_forward()
      ? *_impl_.msg_.demultiplexer_forward_
      : reinterpret_cast< ::rpc_msg::PRC_DeMultiplexer_Forward&>(::rpc_msg::_PRC_DeMultiplexer_Forward_default_instance_);
}
inline const ::rpc_msg::PRC_DeMultiplexer_Forward& NATS_MSG_PRXOY::demultiplexer_forward() const {
  // @@protoc_insertion_point(field_get:nats_msg.NATS_MSG_PRXOY.demultiplexer_forward)
  return _internal_demultiplexer_forward();
}
inline ::rpc_msg::PRC_DeMultiplexer_Forward* NATS_MSG_PRXOY::unsafe_arena_release_demultiplexer_forward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:nats_msg.NATS_MSG_PRXOY.demultiplexer_forward)
  if (_internal_has_demultiplexer_forward()) {
    clear_has_msg();
    ::rpc_msg::PRC_DeMultiplexer_Forward* temp = _impl_.msg_.demultiplexer_forward_;
    _impl_.msg_.demultiplexer_forward_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void NATS_MSG_PRXOY::unsafe_arena_set_allocated_demultiplexer_forward(::rpc_msg::PRC_DeMultiplexer_Forward* demultiplexer_forward) {
  clear_msg();
  if (demultiplexer_forward) {
    set_has_demultiplexer_forward();
    _impl_.msg_.demultiplexer_forward_ = demultiplexer_forward;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:nats_msg.NATS_MSG_PRXOY.demultiplexer_forward)
}
inline ::rpc_msg::PRC_DeMultiplexer_Forward* NATS_MSG_PRXOY::_internal_mutable_demultiplexer_forward() {
  if (!_internal_has_demultiplexer_forward()) {
    clear_msg();
    set_has_demultiplexer_forward();
    _impl_.msg_.demultiplexer_forward_ = CreateMaybeMessage< ::rpc_msg::PRC_DeMultiplexer_Forward >(GetArenaForAllocation());
  }
  return _impl_.msg_.demultiplexer_forward_;
}
inline ::rpc_msg::PRC_DeMultiplexer_Forward* NATS_MSG_PRXOY::mutable_demultiplexer_forward() {
  ::rpc_msg::PRC_DeMultiplexer_Forward* _msg = _internal_mutable_demultiplexer_forward();
  // @@protoc_insertion_point(field_mutable:nats_msg.NATS_MSG_PRXOY.demultiplexer_forward)
  return _msg;
}

inline bool NATS_MSG_PRXOY::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void NATS_MSG_PRXOY::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline NATS_MSG_PRXOY::MsgCase NATS_MSG_PRXOY::msg_case() const {
  return NATS_MSG_PRXOY::MsgCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace nats_msg

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_nats_5fmsg_2eproto
